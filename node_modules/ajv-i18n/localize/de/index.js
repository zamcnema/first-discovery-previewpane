'use strict';
module.exports = function localize_de(errors) {
  if (!(errors && errors.length)) return;
  for (var i = 0; i < errors.length; i++) {
    var e = errors[i];
    var out;
    switch (e.keyword) {
      case '$ref':
        out = 'kann die Referenz ' + (e.params.escaped) + ' nicht auflösen';
        break;
      case 'additionalItems':
        out = '';
        var n = e.schema.length;
        out += 'sollte nicht mehr als ' + (n) + ' Element';
        if (n != 1) {
          out += 'e';
        }
        out += ' enthalten';
        break;
      case 'additionalProperties':
        out = 'sollte keine zusätzlichen Attribute haben';
        break;
      case 'anyOf':
        out = 'sollte einem der Schemata in "anyOf" entsprechen';
        break;
      case 'dependencies':
        out = '';
        var n = e.params.n;
        out += 'sollte Attribut';
        if (n != 1) {
          out += 'e';
        }
        out += ' ' + (e.params.deps) + ' aufweisen, wenn Attribut ' + (e.params.property) + ' gesetzt ist';
        break;
      case 'enum':
        out = 'sollte einem der vorgegebenen Werte entsprechen';
        break;
      case 'format':
        out = 'sollte diesem Format entsprechen: "' + (e.params.escaped) + '"';
        break;
      case 'maxItems':
        out = '';
        var n = e.schema;
        out += 'sollte nicht mehr als ' + (n) + ' Element';
        if (n != 1) {
          out += 'e';
        }
        out += ' haben';
        break;
      case 'maxLength':
        out = '';
        var n = e.schema;
        out += 'sollte nicht länger als ' + (n) + ' Zeichen sein';
        break;
      case 'maxProperties':
        out = '';
        var n = e.schema;
        out += 'sollte nicht mehr als ' + (n) + ' Attribut';
        if (n != 1) {
          out += 'e';
        }
        out += ' haben';
        break;
      case 'maximum':
        out = 'sollte ' + (e.params.condition) + ' sein';
        break;
      case 'minItems':
        out = '';
        var n = e.schema;
        out += 'sollte nicht weniger als ' + (n) + ' Element';
        if (n != 1) {
          out += 'e';
        }
        out += ' haben';
        break;
      case 'minLength':
        out = '';
        var n = e.schema;
        out += 'sollte nicht kürzer als ' + (n) + ' Zeichen sein';
        break;
      case 'minProperties':
        out = '';
        var n = e.schema;
        out += 'sollte nicht weniger als ' + (n) + ' Attribut';
        if (n != 1) {
          out += 'e';
        }
        out += ' haben';
        break;
      case 'minimum':
        out = 'sollte ' + (e.params.condition) + ' sein';
        break;
      case 'multipleOf':
        out = 'sollte ein Vielfaches von ' + (e.schema) + ' sein';
        break;
      case 'not':
        out = 'sollte dem in "not" angegebenen Schema widersprechen';
        break;
      case 'oneOf':
        out = 'sollte genau einem der Schemata in "oneOf" entsprechen';
        break;
      case 'pattern':
        out = 'sollte diesem Muster entsprechen: "' + (e.params.escaped) + '"';
        break;
      case 'required':
        out = 'sollte das erforderliche Attribut ' + (e.params.missingProperty) + ' enthalten';
        break;
      case 'type':
        out = 'sollte sein: ' + (e.params.type);
        break;
      case 'uniqueItems':
        out = 'sollte keine Duplikate enthalten (Elemente #' + (e.params.j) + ' und #' + (e.params.i) + ' sind gleich)';
        break;
    }
    e.message = out;
  }
};
